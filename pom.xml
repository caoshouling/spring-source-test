<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>spring-source-mvc-xml-test</artifactId>
	<packaging>war</packaging>

	<parent>
		<groupId>org.csl.study</groupId>
		<artifactId>spring-source-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../spring-source-parent</relativePath>
	</parent>

	<name>spring-source-test</name>
	<url>http://maven.apache.org</url>

	<properties>
	</properties>

	<dependencies>
 		<!-- 腾讯云短信 -->
		<dependency>
			<groupId>com.github.qcloudsms</groupId>
			<artifactId>qcloudsms</artifactId>
		</dependency>
		<!-- java注解，如@PostConstruct等 -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
		</dependency>
		<!-- freemarker -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<!-- fastjson -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-tx</artifactId>
	    </dependency>
	    <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <!--spring AOP aspectjweaver -->
		<dependency>
		    <groupId>org.aspectj</groupId>
		    <artifactId>aspectjweaver</artifactId>
		</dependency>
		<!--mysql驱动 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!--druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
		</dependency>
			<!-- mybatis -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		</dependency>
		<!-- mybatis-spring -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.github.pagehelper</groupId>
		    <artifactId>pagehelper</artifactId>
		</dependency>
	  	<!-- hibernate-validator -->
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-validator</artifactId>
		</dependency>
	
		<!-- Java工具类 -->
		<dependency>
		    <groupId>cn.hutool</groupId>
		    <artifactId>hutool-all</artifactId>
		</dependency>
		<!-- lombok -->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <scope>provided</scope>
		</dependency>
		<!-- com.google.guava/guava -->
		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		</dependency>
		<!-- com.alibaba/QLExpress：特殊数学公式计算（高精度） -->
		<dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>QLExpress</artifactId>
		</dependency>
		<!-- springloaded
		使用方法：在启动参数中加入：
		-javaagent:E:\workspace\maven\org\springframework\springloaded\1.2.8.RELEASE\springloaded-1.2.8.RELEASE.jar -noverify -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>springloaded</artifactId>
		    <version>1.2.8.RELEASE</version>
		    <scope>provided</scope>
		</dependency>
		
	</dependencies>
	<build>
		<finalName>springMvc</finalName>
		<plugins>
		
		    <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
          		<artifactId>maven-compiler-plugin</artifactId>
		        <configuration>  
	                <source>1.8</source>  
	                <target>1.8</target>  
	                <encoding>utf-8</encoding>
          		</configuration>  
 
	        </plugin>
			<!-- 配置Tomcat插件 
			     tomcat7:deploy 部署一个web war包
			     tomcat7:reload 重新加载web war包 
				 tomcat7:start 启动tomcat 
				 tomcat7:stop 停止tomcat 
				 tomcat7:undeploy 停止一个war包 
				 tomcat7:run 启动嵌入式tomcat ，并运行当前项目 -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<configuration>
					<port>8080</port>
					<!-- 1.如果不配置，那么默认为/${project.artifactId} 2.可以配置为/${project.build.finalName} -->
					<path>/springMvc</path>
					<uriEncoding>UTF-8</uriEncoding>
					<!--上面是直接执行， 下面是是部署到其它tomcat的配置 -->

					<!-- 方法一 <url>http://localhost:8080/manager/text</url> 
					         <server>tomcat7</server> 
						然后，在settting.xml里面加入 
							 <server> 
								<id>tomcat7</id> 
								<username>admin</username> 
								<password>123456</password> 
							 </server> -->
					<!-- 方法二 <url>http://127.0.0.1:8080/manager/text</url> 
					         <username>admin</username> 
						     <password>123456</password> -->
				</configuration>
			</plugin>
			<!-- mybatis-generator -->
			<!-- Maven命令：mvn mybatis-generator:generate 
			     除了Maven方式，还有：
			      （1）命令行： java -jar mybatis-generator-core-x.x.x.jar -configfile generatorConfig.xml
			      （2）代码方式:main方法中写代码
			      （3）Ant方式
			  -->
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.7</version>
				<configuration>
					<configurationFile>${project.basedir}/src/main/resources/generatorConfig/generatorConfig.xml</configurationFile>
					<verbose>true</verbose>
					<overwrite>true</overwrite>
				</configuration>
				<!-- 之前用的5.1.47版本太高了，换成5.1.38是可以的 -->
				<dependencies>
				  	<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.38</version>
					</dependency>
				</dependencies>
			</plugin>

		</plugins>
	</build>
</project>
